server:
  configEnabled: true
  config:
    repositories: |
      - name: mymarck-git-repo
        type: git
        url: https://github.com/myMarck/kubernetes-helm.git
      - name: argo-helm-repo
        type: helm
        url: https://argoproj.github.io/argo-helm
  additionalApplications: 
    - name: argocd
      namespace: argocd
      destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      project: argocd
      sources:
        - repoURL: https://argoproj.github.io/argo-helm
          chart: argocd
          targetRevision: 'v2.12.6'
          helm:
            releaseName: argo-cd
            valueFiles:
            - $values/argocd/install/values.yaml
        - repoURL: 'https://github.com/myMarck/kubernetes-helm.git'
          targetRevision: main
          ref: values      
      syncPolicy:
        syncOptions:
        - CreateNamespace=true
    - name: argocd/apps
      namespace: argocd
      destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      project: argocd
      source:
        path: argocd/apps
        repoURL: https://github.com/myMarck/kubernetes-helm.git
        targetRevision: HEAD
        directory:
          recurse: true
          jsonnet: {}
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
    - name: argocd/appprojects
      namespace: argocd
      destination:
        namespace: argocd
        server: https://kubernetes.default.svc
      project: argocd
      source:
        path: argocd/appprojects
        repoURL: https://github.com/myMarck/kubernetes-helm.git
        targetRevision: HEAD
        directory:
          recurse: true
          jsonnet: {}
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
  additionalProjects: 
  - name: argocd
    namespace: argocd
    additionalLabels: {}
    additionalAnnotations: {}
    description: Argocd Project
    sourceRepos:
    - '*'
    destinations:
    - namespace: argocd
      server: https://kubernetes.default.svc
    clusterResourceWhitelist:
    - group: '*'
      kind: '*'
    orphanedResources:
      warn: false
