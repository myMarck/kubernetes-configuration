apiVersion: batch/v1
kind: Job
metadata:
  name: etcd-secret-writer
  namespace: monitoring
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  template:
    spec:
      automountServiceAccountToken: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - image: docker.io/bitnami/kubectl:1.32.0-debian-12-r0
        command: ["/bin/sh"]
        args: 
          - "-c"
          - >-
              kubectl create secret generic etcd-secrets --save-config
              --dry-run=client --from-file=/system/secrets/etcd/ca.crt
              --from-file=/system/secrets/etcd/server.crt
              --from-file=/system/secrets/etcd/server.key -o yaml | kubectl apply -f
              - 
        imagePullPolicy: IfNotPresent
        name: kubectl
        volumeMounts:
        - mountPath: /system/secrets/etcd
          name: k8setcdcert
        - mountPath: /tmp
          name: tmp
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 60 # this is matches the etcd user in the cluster
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: tmp
        emptyDir: {}
      - hostPath:
          path: /system/secrets/etcd
        name: k8setcdcert
      restartPolicy: Never
      serviceAccount: secrets-writer
      serviceAccountName: secrets-writer
  backoffLimit: 3